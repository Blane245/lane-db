FORMAT: 1A
HOST: https://polls.apiblueprint.org/

# db-lane

New collections as the api evolves
## Response Conventions
Content-Type: application/json; charset=utf-8
## Action conventions
* GET - retrieves resources
* POST - submits new data to the user
* PUT -  updates existing data
* DELETE - removes data

## Error HTTP status codes

* 400 Bad Request – This means that client-side input fails validation.
* 401 Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
* 403 Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.
* 404 Not Found – This indicates that a resource is not found.
* 500 Internal server error – This is a generic server error. It probably shouldn’t be thrown explicitly.
* 502 Bad Gateway – This indicates an invalid response from an upstream server.
* 503 Service Unavailable – This indicates that something unexpected happened on server side (It can be anything like server overload, some parts of the system failed, etc.).
## Users Collection [/users]

### List All Users [GET]

+ Response 200 (application/json)
    + Body

            [
                {
                    "name": "User's Name",
                }
                {
                    "email": "User's email address",
                }
                {
                    "isAdministrator": "is the new user an administrator?"
                    "choices": 
                        [
                            "yes",
                            "no"
                        ]
                }
            ]
+ Response 403 (application/json)
    + Body
    
            {
                "message": "You do not administrative privileges on this api"
            }
### Create a New User [POST]

A user with administrative privledges may add new users

+ Request (application/json)

    + Body

            {
                "name": "User's Name"
            }
            {
                "email": "User's email address"
            }
            {
                "isAdministrator": "is the new user an administrator?"
                "choices": 
                    [
                        "yes",
                        "no"
                    ]
            }

+ Response 201 (application/json)

    + Headers

            Location: /users/${id}

    + Body

            {
                "message": "User ${name} with email ${email} added. Administrative privileges: ${isAdministrator]"
            }
            
+ Response 403 (application/json)

    + Headers

            Location: /users

    + Body
    
            {
                "message": "You do not administrative privileges on this api"
            }
            
### Modify a user (PUT) 

    + Body
    
            {
                "name": "User's name"
            }
            {
                "email": "User's email address"
            }
            {
                "isAdministrator": "is the new user an administrator?"
                "choices": 
                    [
                        "yes",
                        "no"
                    ]
            }

+ Response 201 (application/json)

    + Headers

            Location: /users/${id}

    + Body

            {
                "message": `User ${name} with email ${email} had been modified. Administrative privledges: ${isAdministrator]`
            }
+ Response 403 (application/json)
    + Body
    
            {
                "message": "You do not administrative privileges on this api"
            }
### Delete a user (DELETE) 
    + Body
            {
                "name": "User's name"
            }

+ Response 201 (application/json)

    + Headers

            Location: /users/${id}

    + Body

            {
                "message": `User ${name} deleted.`
            }
+ Response 403 (application/json)
    + Body
    
            {
                "message": "You do not administrative privileges on this api"
            }